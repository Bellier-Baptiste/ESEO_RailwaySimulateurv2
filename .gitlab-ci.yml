## This file is a template, and might need editing before it works on your project.
# The purpose is to give student a simple working example of a CI pipeline in Gitlab
#
# The pipeline will include two stages, build and analysis
# The build stage will build the maven project and package a downloadable war as artifact
# The analysis stage will scan code and will upload audit results to a sonarqube project
#
# As this is only a template, student can (should ?) enrich this CI pipeline by adding jobs to the stages, or even adding stages if needed

# Some important specific informations concerning the gitlab-CI and sonar infrastructure:
## The infrastructure is part of the ESEO network, therfore, the same filtering rules are set, thus any elements issued from the CI pipeline is filtered from a network point-of-view.
## To workaround this filters, a http proxy can be used to access the Internet, and can be used to access both http and https targets.
## The proxy host is 192.168.4.8 and its port is 3128
## Let's say this firmly again:
##
## FOR EVERY ACCESS TO INTERNET, A PROXY MUST BE USED !!!
## IF YOU DONT USE ONE AND TRY TO ACCESS INTERNET, YOU WILL BE FILTERED
##
## On the other hand, if you use a proxy to access local machines, you won't be properly redirected form proxy to target
## As a consequence, one should, as decribed in the before_script section:
## - set http and https proxy
## - set a NO_PROXY for lacal environments
##
## Be Aware that some managment tool don't care about system wide environnements variables and so you have to pass those same proxy and noproxy configs directly to those tools
## For example, Maven needs to get -Dhttp.proxyHost=192.168.4.8 -Dhttp.proxyPort=3128 -Dhttps.proxyHost=192.168.4.8 -Dhttps.proxyPort=3128 options to configure proxy inside maven context

stages:
  - build
  - test
  - analysis

variables:
  MAVEN_SETTINGS_PATH: '.m2/settings.xml'
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttp.proxyHost=192.168.4.8 -Dhttp.proxyPort=3128 -Dhttps.proxyHost=192.168.4.8 -Dhttps.proxyPort=3128 -Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

  # SonarQube configuration
  SONAR_HOST_URL: "http://172.24.1.1:9000/sonar"
  SONAR_DEV_NAME: "PFE_MNJS_v3"
  SONAR_DEV_PROJECT_KEY: "Ce1MDPt!MNJSv3"


# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

before_script:
  - export https_proxy=http://192.168.4.8:3128/
  - export http_proxy=http://192.168.4.8:3128/
  #- sed -i "s/server.ssl.key-store-password=.*/server.ssl.key-store-password=${KEY_STORE_PASSWORD}/" src/main/resources/application.properties
  #- sed -i "s/server.ssl.key-alias=.*/server.ssl.key-alias=${KEY_STORE_ALIAS}/" src/main/resources/application.properties

# java_build job: build repository code, using maven 3.8.1 docker image, and package compiled code to a .war downloadable artifact
java_build:
  stage: build
  # Cache downloaded dependencies and plugins between builds.
  # The key here separates one cache per branch/tag ($CI_COMMIT_REF_SLUG)
  image: maven:3.8.6-jdk-11
  cache:
    key: "maven-$CI_COMMIT_REF_SLUG"
    paths:
      - .m2/repository
  script:
    - mvn $MAVEN_CLI_OPTS package -DskipTests=true
#  artifacts:
#    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
#    paths:
#      - "**/target/*.war"
#    expire_in: 3 days
  only:
    - master
    - dev
    - mgt_37_bbel

